<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<script language="javascript">AC_FL_RunContent = 0;</script>
<script language="javascript"> DetectFlashVer = 0; </script>
<script src="${jenkins_base}plugin/cucumber-reports/charts/AC_RunActiveContent.js" language="javascript"></script>
<script language="JavaScript" type="text/javascript">
<!--
var requiredMajorVersion = 10;
var requiredMinorVersion = 0;
var requiredRevision = 45;
-->
</script>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title>Cucumber-JVM Html Reports - Feature Overview</title>
	<link rel="stylesheet" href="css/style.css" type="text/css" media="screen" />
	<link rel="stylesheet" href="css/skin/style.css" type="text/css" media="screen" />
	<link rel="stylesheet" href="css/960.css" type="text/css" media="screen" />
	<link rel="stylesheet" href="css/reset.css" type="text/css" media="screen" />
	<link rel="stylesheet" href="css/text.css" type="text/css" media="screen" />
    <script type="text/javascript" src="http://mbostock.github.com/d3/d3.js?2.5.0"></script>
    <script type="text/javascript" src="http://mbostock.github.com/d3/d3.geom.js?2.5.0"></script>
    <script type="text/javascript" src="http://mbostock.github.com/d3/d3.layout.js?2.5.0"></script>
	<link rel="shortcut icon" href="favicon.ico" />
<style>
.feature-keyword{font-weight:bold;}
.feature-description{padding-left:15px;font-style:italic;background-color:beige;}
.feature-role{font-weight:bold;}
.feature-action{font-weight:bold;}
.feature-value{font-weight:bold;}
.feature-tags{padding-top:10px;padding-left:15px;color:darkblue;}
.scenario-keyword{font-weight:bold;padding-left:15px;}
.scenario-scenario_name{padding-left:15px;}
.step-keyword{font-weight:bold;padding-left:50px;}
.step-error-message{background-color:#FFEEEE;padding-left:50px;border: 1px solid #D88A8A;}
.passed{background-color:#C5D88A;}
.failed{background-color:#D88A8A;}
.skipped{background-color:#2DEAEC;}
.undefined{background-color: #ebcc81;}

table.stats-table {
	color:black;
	border-width: 1px;
	border-spacing: 2px;
	border-style: outset;
	border-color: gray;
	border-collapse: collapse;
	background-color: white;
}
table.stats-table th {
	color:black;
	border-width: 1px;
	padding: 5px;
	border-style: inset;
	border-color: gray;
	background-color: #66CCEE;
	-moz-border-radius: ;
}
table.stats-table td {
  color:black;
  text-align: center;
	border-width: 1px;
	padding: 5px;
	border-style: inset;
	border-color: gray;
	background-color: white;
	-moz-border-radius: ;
}
</style>

</head>
<body id="top">
	<div id="fullwidth_header">
		<div class="container_12">
			<h1 class="grid_4 logo"><a href="feature-overview.html" class='ie6fix'>Cucumber</a></h1>
			<div class="grid_6" id="nav">
				<ul>
				#if ($build_number)
				<li><a href="${jenkins_base}job/$build_project/$build_number">Back To Jenkins</a></li>
				#end
				<li><a href="tag-overview.html">Tag Overview</a></li>
				</ul>
			</div>
		</div>
	</div>
	<div id="fullwidth_gradient">
		<div class="container_12">
			<div class="grid_9 heading">
				<h2>Feature Overview#if ($build_number) for Build: $build_number#end</h2>
				<span class="subhead">The following graph shows number of steps passing, failing and skipped for this build:</span>
			</div>
		</div>
	</div>

	<div class="container_12">
		<div class="grid_12">
	 <div style="text-align:center;" id="pieChartContainer"><script language="JavaScript" type="text/javascript">
<!--

    var w = 270,                        //width
    h = 270,                            //height
    r = Math.min(w, h) / 2,                            //radius
    color = d3.scale.category20c();     //builtin range of colors
    
    var statusColors = [
    '#C5D88A', // PASSED
    '#D88A8A', // FAILED
    '#2DEAEC', // SKIPPED
    '#ebcc81'  // PENDING
    ];

    data = $chart_data;
    
    var vis = d3.select("#pieChartContainer")
        .append("svg:svg")              //create the SVG element inside the <body>
        .data([data])                   //associate our data with the document
            .attr("width", w)           //set the width and height of our visualization (these will be attributes of the <svg> tag
            .attr("height", h)
        .append("svg:g")                //make a group to hold our pie chart
            .attr("transform", "translate(" + r + "," + r + ")")    //move the center of the pie chart from 0, 0 to radius, radius

    var arc = d3.svg.arc()              //this will create <path> elements for us using arc data
        .innerRadius(r - 70).outerRadius(r - 20);

    var pie = d3.layout.pie()           //this will create arc data for us given a list of values
        .value(function(d) { return d.value; });    //we must tell it out to access the value of each element in our data array

    var arcs = vis.selectAll("g.slice")     //this selects all <g> elements with class slice (there aren't any yet)
        .data(pie)                          //associate the generated pie data (an array of arcs, each having startAngle, endAngle and value properties) 
        .enter()                            //this will create <g> elements for every "extra" data element that should be associated with a selection. The result is creating a <g> for every object in the data array
            .append("svg:g")                //create a group to hold each slice (we will have a <path> and a <text> element associated with each slice)
                .attr("class", "slice");    //allow us to style things in the slices (like text)

        arcs.append("svg:path")
                .attr("fill", function(d, i) { return statusColors[i]; } ) //set the color for each slice to be chosen from the color function defined above
                .attr("d", arc);                                    //this creates the actual SVG path using the associated data (pie) with the arc drawing function

        arcs.append("svg:text")                                     //add a label to each slice
                .attr("transform", function(d) {                    //set the label's origin to the center of the arc
                //we have to make sure to set these before calling arc.centroid
                d.innerRadius = 0;
                d.outerRadius = r;
                return "translate(" + arc.centroid(d) + ")";        //this gives us a pair of coordinates like [50, 50]
            })
            .attr("text-anchor", "middle")                          //center the text on it's origin
            .text(function(d, i) { return data[i].value > 0 ? data[i].label : ""; });        //get the label from our original data array

// -->
</script>
<noscript>
	<P>This content requires JavaScript.</P>
</noscript>
</div>
	<br/>
		<div class="grid_12"></div>

	<div>
	  <br/>
  <h2>Feature Statistics</h2>
  <table class="stats-table">
  <tr>
  <th>Feature</th>
  <th>Scenarios</th>
  <th>Steps</th>
  <th>Passed</th>
  <th>Failed</th>
  <th>Skipped</th>
  <th>Pending</th>
  <th>Duration</th>
  <th>Status</th>
  </tr>

      #foreach($feature in $features)

          #if($feature.getStatus().toString() == "PASSED")
          #set($bgcolour = "#C5D88A")
          #else
          #set($bgcolour = "#D88A8A")
          #end

          <tr>
          <td style="text-align:left;"><a href="$feature.getFileName()">$feature.getRawName()</a></td>
          <td>$feature.getNumberOfScenarios()</td>
          <td>$feature.getNumberOfSteps()</td>
          <td>$feature.getNumberOfPasses()</td>
          <td>$feature.getNumberOfFailures()</td>
          <td>$feature.getNumberOfSkipped()</td>
          <td>$feature.getNumberOfPending()</td>
          <td>$feature.getDurationOfSteps()</td>
          <td style="background-color: $bgcolour;">$feature.getRawStatus()</td>
          </tr>
      #end

<tr>
<td style="background-color:lightgray;font-weight:bold;">$total_features</td>
<td style="background-color:lightgray;font-weight:bold;">$total_scenarios</td>
<td style="background-color:lightgray;font-weight:bold;">$total_steps</td>
<td style="background-color:lightgray;font-weight:bold;">$total_passes</td>
<td style="background-color:lightgray;font-weight:bold;">$total_fails</td>
<td style="background-color:lightgray;font-weight:bold;">$total_skipped</td>
<td style="background-color:lightgray;font-weight:bold;">$total_pending</td>
<td style="background-color:lightgray;font-weight:bold;">$total_duration</td>
<td style="background-color:lightgray;font-weight:bold;">Totals</td>
</tr></table>
	</div>

	</div>
	</div>


	<div class="container_12">
		<div class="grid_12 hr"></div>
		<div class="grid_12 footer">
			<p style="text-align:right;">Created at $time_stamp</p>
		</div>
	</div>
	<div class="clear"></div>
</body>
</html>
